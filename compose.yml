name: ${APP_NAME}
services:
  db:
    image: postgres:17.4-alpine
    container_name: ${APP_NAME}-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [CMD-SHELL, "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  dbgate:
    image: dbgate/dbgate
    container_name: ${APP_NAME}-dbgate
    restart: always
    ports:
      - 8888:3000
    volumes:
      - dbgate-data:/root/.dbgate
    environment:
      CONNECTIONS: con1
      LABEL_con1: AppDatabase
      SERVER_con1: db
      USER_con1: postgres
      PASSWORD_con1: postgres
      PORT_con1: 5432
      ENGINE_con1: postgres@dbgate-plugin-postgres
    depends_on:
      db:
        condition: service_healthy
  hono-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: hono-api-img-dev
    container_name: ${APP_NAME}
    restart: unless-stopped
    env_file: .env.dev
    ports:
      - ${PORT}:${PORT}
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    depends_on:
      db:
        condition: service_healthy

volumes:
  node_modules:
  db-data:
  dbgate-data:
